apply plugin: 'com.android.application'

android {
		compileSdkVersion 23
		buildToolsVersion "24.0.2"
		defaultConfig {
				applicationId "com.wonbin.gradledemo"
				minSdkVersion 15
				targetSdkVersion 23
				versionCode 1
				versionName "1.0"
				testInstrumentationRunner "adroid.support.test.runner.AndroidJUnitRunner"
		}
		buildTypes {
				debug {
					applicationIdSuffix ".debug"
				}
				release {
						minifyEnabled false
						proguardFiles getDefaultProguardFile('proguard-android.txt'),'proguard-rules.pro'
				}
		}
//		lintOptions {
//			htmlReport true
//			htmlOutput file("lint-results.html")
//		}
}

dependencies {
		compile fileTree(dir:'libs',include:['*.jar'])
				androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2',{
					exclude group: 'com.android.support',module: 'support-annotations'})
		compile 'com.android.support:appcompat-v7:23.4.0'
		testCompile 'junit:junit:4.12'
}

// hook android plugin

/*android.applicationVariants.all { variant ->
	variant.outputs.each { output ->
		def file = output.outputFile
		output.outputFile = new File(file.parent,
			file.name.replace(".apk","${variant.versionName}.apk"))
	}
}*/

android.applicationVariants.all { variant ->
	if(variant.install) {
		tasks.create(name: "run${variant.name.capitalize()}",
			dependsOn: variant.install) {
				description "Installs the ${variant.description} and runs the main launcher activity"

				doFirst {

				def classpath = variant.applicationId
				if(variant.buildType.applicationIdSuffix) {
					classpath -= "${variant.buildType.applicationIdSuffix}"
				}

				def launchClass = "${variant.applicationId}/${classpath}.MainActivity"
					exec {
						executable = 'adb'
						args = ['shell','am','start','-n',
							launchClass]
					}
				}
			}
	}


}
